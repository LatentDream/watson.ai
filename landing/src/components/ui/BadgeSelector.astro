---
import Badge from "./Badge.astro";

interface IOption {
  value: string;
  disabled?: boolean;
}

interface Props {
  options: IOption[];
  selected: string;
  setSelected: (value: string) => void;
  className?: string;
}

// Define Badge component props
interface BadgeProps {
  variant: "secondary";
  class: string;
  onClick?: () => void;
  children: any;
}

const { options, selected, setSelected, className } = Astro.props;
---

<div class={`inline-flex space-x-2 p-1 bg-gray-100/50 rounded-full ${className || ''}`}>
  {options.map((option) => {
    let cn = "cursor-pointer rounded-xl text-black";
    if (selected === option.value) {
      cn += ' bg-white-angel hover:bg-orange-verm hover:text-white-angel';
    } else if (option.disabled) {
      cn += ' bg-transparent cursor-not-allowed text-gray-500';
    } else {
      cn += ' bg-transparent hover:bg-gray-200';
    }
    
    const badgeProps: BadgeProps = {
      variant: "secondary",
      class: cn,
      onClick: () => { if (!option.disabled) setSelected(option.value); },
      children: option.value
    };
    
    return <Badge {...badgeProps} />;
  })}
</div>

<script>
  // Add any additional client-side logic here if needed
</script>
